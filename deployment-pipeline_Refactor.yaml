Parameters:
  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String

  GitHubUser:
    Type: String
  
  JenkinsServerUrl:
    Type: String  
  
  TargetGroup:
    Type: String

  StackName:
    Type: String

  Repository:
    Type: String

  Cluster:
    Type: String

  TemplateBucket:
    Type: String


Resources:
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: !Sub cfn-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "cloudformation.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:*
                  - ecr:*
                  - iam:*

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub cb-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub cp-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - !Sub arn:aws:s3:::${TemplateBucket}
                  - !Sub arn:aws:s3:::${TemplateBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

    
  CustomJenkinsActionType:
    Type: AWS::CodePipeline::CustomActionType
    
    Properties:
      Category: Build
      Provider:
        Fn::Join:
        - ''
        - - "---Jenkins"
      Version: '1'
      ConfigurationProperties:
      - Key: 'true'
        Name: ProjectName
        Queryable: 'true'
        Required: 'true'
        Secret: 'false'
        Type: String
      InputArtifactDetails:
        MaximumCount: 5
        MinimumCount: 0
      OutputArtifactDetails:
        MaximumCount: 5
        MinimumCount: 0
      Settings:
        EntityUrlTemplate:
          Fn::Join:
          - ''
          - - !Ref JenkinsServerUrl
            - "/job/{Config:ProjectName}"
        ExecutionUrlTemplate:
          Fn::Join:
          - ''
          - - !Ref JenkinsServerUrl
            - "/job/{Config:ProjectName}/{ExternalExecutionId}"
  
  
  
  
  
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: ["CustomJenkinsActionType"]
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
            - Name: Template
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: Template
              RunOrder: 1
              Configuration:
                S3Bucket: !Ref TemplateBucket
                S3ObjectKey: templates.zip
        - Name: Build-Jenkins
          Actions:
            - Name: JenkinsBuild
              InputArtifacts:
                - Name: App
                   
              ActionTypeId:
                    Category: Build
                    Owner: Custom
                    Version: 1
                    Provider:
                     Fn::Join:
                     - ''
                     - - "---Jenkins"
              OutputArtifacts:
              - Name: Jenkins-Build-Output
              Configuration:
                ProjectName: Jenkins-Build-West-2
              RunOrder: 1
                
                  

        - Name: Deploy2Ecs
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: Deploy
                ActionMode: CREATE_UPDATE
                StackName: !Ref StackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: Template::service.yaml
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                ParameterOverrides: !Sub |
                  {
                   "Tag" : { "Fn::GetParam" : [ "Jenkins-Build-Output", "build.json", "tag" ] },
                    "DesiredCount": "1",
                    "Cluster": "${Cluster}",
                    "TargetGroup": "${TargetGroup}"
                  }
              InputArtifacts:
                - Name: Template
                - Name: Jenkins-Build-Output
              RunOrder: 1


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
